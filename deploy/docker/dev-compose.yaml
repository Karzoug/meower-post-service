services:
  mongodb-primary:
    image: docker.io/bitnami/mongodb:8.0
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_ROOT_PASSWORD=example
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_DATABASE=meower

  mongodb-secondary:
    image: docker.io/bitnami/mongodb:8.0
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=example
      - MONGODB_REPLICA_SET_KEY=replicasetkey123

  mongodb-arbiter:
    image: docker.io/bitnami/mongodb:8.0
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
      - MONGODB_REPLICA_SET_MODE=arbiter
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=example
      - MONGODB_REPLICA_SET_KEY=replicasetkey123

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongodb-primary:27017/
      ME_CONFIG_BASICAUTH: false

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/dev-prom.yaml'
    ports:
       - 9090:9090
    restart: unless-stopped
    volumes:
      - ./../metric/dev:/etc/prometheus

  jaeger:
    image: jaegertracing/all-in-one:1.60
    container_name: jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    hostname: jaeger
    ports:
      - 16686:16686
    #   - 4317:4317
    #   - 4318:4318
    #   - 14268:14268
    restart: unless-stopped

  kafka:
    image: docker.io/bitnami/kafka:3.9
    ports:
      - '9094:9094'
    restart: unless-stopped
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  panda-console:
    image: redpandadata/console
    container_name: panda-console
    ports:
      - 3004:8080
    environment:
      KAFKA_BROKERS: kafka:9092

  post-service:
    depends_on:
      mongodb-primary:
        condition: service_started
      jaeger:
        condition: service_started
    image: ${IMAGE_SERVICE}
    container_name: post-service
    environment:
      MONGO_URI: mongodb://root:example@mongodb-primary:27017,mongodb-secondary:27017,mongodb-arbiter:27017/meower?replicaSet=replicaset&authSource=admin
      OTLP_PROBABILITY: 1
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger:4318
      OTEL_EXPORTER_OTLP_INSECURE: true
      LOG_LEVEL: debug
    ports:
       - 3001:3001
    #   - 3002:3002
    restart: unless-stopped

  post-outbox:
    depends_on:
      mongodb-primary:
        condition: service_started
      kafka:
        condition: service_started
      prometheus:
        condition: service_started
    image: ${IMAGE_OUTBOX}
    container_name: post-outbox
    environment:
      LOG_LEVEL: debug
      MONGO_URI: mongodb://root:example@mongodb-primary:27017,mongodb-secondary:27017,mongodb-arbiter:27017/meower?replicaSet=replicaset&authSource=admin
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    restart: unless-stopped